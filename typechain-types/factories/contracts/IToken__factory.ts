/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { IToken, ITokenInterface } from "../../contracts/IToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_underlying",
        type: "address",
      },
      {
        internalType: "address",
        name: "_interestRateModel",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "borrow",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "borrows",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBorrowRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSupplyRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "interestRateModel",
    outputs: [
      {
        internalType: "contract InterestRateModel",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "repay",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reserveFactorMantissa",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBorrows",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052662386f26fc10000600b553480156200001c57600080fd5b506040516200288b3803806200288b8339818101604052810190620000429190620001d0565b6040518060400160405280600681526020017f49546f6b656e00000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f49544b4e000000000000000000000000000000000000000000000000000000008152508160039081620000bf919062000491565b508060049081620000d1919062000491565b505050600160058190555081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000578565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000198826200016b565b9050919050565b620001aa816200018b565b8114620001b657600080fd5b50565b600081519050620001ca816200019f565b92915050565b60008060408385031215620001ea57620001e962000166565b5b6000620001fa85828601620001b9565b92505060206200020d85828601620001b9565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200029957607f821691505b602082108103620002af57620002ae62000251565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003197fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002da565b620003258683620002da565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003726200036c62000366846200033d565b62000347565b6200033d565b9050919050565b6000819050919050565b6200038e8362000351565b620003a66200039d8262000379565b848454620002e7565b825550505050565b600090565b620003bd620003ae565b620003ca81848462000383565b505050565b5b81811015620003f257620003e6600082620003b3565b600181019050620003d0565b5050565b601f82111562000441576200040b81620002b5565b6200041684620002ca565b8101602085101562000426578190505b6200043e6200043585620002ca565b830182620003cf565b50505b505050565b600082821c905092915050565b6000620004666000198460080262000446565b1980831691505092915050565b600062000481838362000453565b9150826002028217905092915050565b6200049c8262000217565b67ffffffffffffffff811115620004b857620004b762000222565b5b620004c4825462000280565b620004d1828285620003f6565b600060209050601f831160018114620005095760008415620004f4578287015190505b62000500858262000473565b86555062000570565b601f1984166200051986620002b5565b60005b8281101562000543578489015182556001820191506020850194506020810190506200051c565b868310156200056357848901516200055f601f89168262000453565b8355505b6001600288020188555050505b505050505050565b61230380620005886000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b8578063a9059cbb1161007c578063a9059cbb1461036a578063ba1c5e801461039a578063c5ebeaec146103b8578063db006a75146103e8578063dd62ed3e14610418578063f3fdb15a1461044857610137565b806370a08231146102b057806384bdc9a8146102e05780638f840ddd146102fe57806395d89b411461031c578063a0712d681461033a57610137565b8063313ce567116100ff578063313ce567146101f6578063371fd8e61461021457806347bd37181461024457806354a5706f146102625780636f307dc31461029257610137565b806306fdde031461013c578063095ea7b31461015a578063173b99041461018a57806318160ddd146101a857806323b872dd146101c6575b600080fd5b610144610466565b6040516101519190611a77565b60405180910390f35b610174600480360381019061016f9190611b32565b6104f8565b6040516101819190611b8d565b60405180910390f35b61019261051b565b60405161019f9190611bb7565b60405180910390f35b6101b0610521565b6040516101bd9190611bb7565b60405180910390f35b6101e060048036038101906101db9190611bd2565b61052b565b6040516101ed9190611b8d565b60405180910390f35b6101fe61055a565b60405161020b9190611c41565b60405180910390f35b61022e60048036038101906102299190611c5c565b610563565b60405161023b9190611b8d565b60405180910390f35b61024c6108e2565b6040516102599190611bb7565b60405180910390f35b61027c60048036038101906102779190611c89565b6108e8565b6040516102899190611bb7565b60405180910390f35b61029a610900565b6040516102a79190611d15565b60405180910390f35b6102ca60048036038101906102c59190611c89565b610926565b6040516102d79190611bb7565b60405180910390f35b6102e861096e565b6040516102f59190611bb7565b60405180910390f35b610306610abd565b6040516103139190611bb7565b60405180910390f35b610324610ac3565b6040516103319190611a77565b60405180910390f35b610354600480360381019061034f9190611c5c565b610b55565b6040516103619190611b8d565b60405180910390f35b610384600480360381019061037f9190611b32565b610c5b565b6040516103919190611b8d565b60405180910390f35b6103a2610c7e565b6040516103af9190611bb7565b60405180910390f35b6103d260048036038101906103cd9190611c5c565b610dc9565b6040516103df9190611b8d565b60405180910390f35b61040260048036038101906103fd9190611c5c565b6110f9565b60405161040f9190611b8d565b60405180910390f35b610432600480360381019061042d9190611d30565b611248565b60405161043f9190611bb7565b60405180910390f35b6104506112cf565b60405161045d9190611d91565b60405180910390f35b60606003805461047590611ddb565b80601f01602080910402602001604051908101604052809291908181526020018280546104a190611ddb565b80156104ee5780601f106104c3576101008083540402835291602001916104ee565b820191906000526020600020905b8154815290600101906020018083116104d157829003601f168201915b5050505050905090565b6000806105036112f5565b90506105108185856112fd565b600191505092915050565b600b5481565b6000600254905090565b6000806105366112f5565b905061054385828561130f565b61054e8585856113a3565b60019150509392505050565b60006012905090565b600061056d611497565b81600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156105ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e690611e58565b60405180910390fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161064e93929190611e87565b6020604051808303816000875af115801561066d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106919190611eea565b6106d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c790611f63565b60405180910390fd5b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161072d9190611f83565b602060405180830381865afa15801561074a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076e9190611fb3565b90506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166315f2405383600954600a546040518463ffffffff1660e01b81526004016107d593929190611fe0565b602060405180830381865afa1580156107f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108169190611fb3565b90506000670de0b6b3a7640000828661082f9190612046565b61083991906120b7565b905084600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461088a91906120e8565b92505081905550808561089d91906120e8565b600960008282546108ae91906120e8565b9250508190555080600a60008282546108c7919061211c565b92505081905550600193505050506108dd6114dd565b919050565b60095481565b60086020528060005260406000206000915090505481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109cc9190611f83565b602060405180830381865afa1580156109e9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0d9190611fb3565b9050600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b816881682600954600a54600b546040518563ffffffff1660e01b8152600401610a769493929190612150565b602060405180830381865afa158015610a93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab79190611fb3565b91505090565b600a5481565b606060048054610ad290611ddb565b80601f0160208091040260200160405190810160405280929190818152602001828054610afe90611ddb565b8015610b4b5780601f10610b2057610100808354040283529160200191610b4b565b820191906000526020600020905b815481529060010190602001808311610b2e57829003601f168201915b5050505050905090565b6000610b5f611497565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610bbe93929190611e87565b6020604051808303816000875af1158015610bdd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c019190611eea565b610c40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3790611f63565b60405180910390fd5b610c4a33836114e7565b60019050610c566114dd565b919050565b600080610c666112f5565b9050610c738185856113a3565b600191505092915050565b600080600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610cdc9190611f83565b602060405180830381865afa158015610cf9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1d9190611fb3565b9050600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166315f2405382600954600a546040518463ffffffff1660e01b8152600401610d8293929190611fe0565b602060405180830381865afa158015610d9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc39190611fb3565b91505090565b6000610dd3611497565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610e309190611f83565b602060405180830381865afa158015610e4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e719190611fb3565b90506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166315f2405383600954600a546040518463ffffffff1660e01b8152600401610ed893929190611fe0565b602060405180830381865afa158015610ef5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f199190611fb3565b90506000670de0b6b3a76400008286610f329190612046565b610f3c91906120b7565b905084831015610f81576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f78906121e1565b60405180910390fd5b8085610f8d919061211c565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610fdb919061211c565b925050819055508085610fee919061211c565b60096000828254610fff919061211c565b92505081905550600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33876040518363ffffffff1660e01b8152600401611063929190612201565b6020604051808303816000875af1158015611082573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a69190611eea565b6110e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110dc90611f63565b60405180910390fd5b600193505050506110f46114dd565b919050565b6000611103611497565b8161110d33610926565b101561114e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114590612276565b60405180910390fd5b6111583383611569565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016111b5929190612201565b6020604051808303816000875af11580156111d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f89190611eea565b611237576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161122e90611f63565b60405180910390fd5b600190506112436114dd565b919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b61130a83838360016115eb565b505050565b600061131b8484611248565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461139d578181101561138d578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161138493929190612296565b60405180910390fd5b61139c848484840360006115eb565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114155760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161140c9190611f83565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114875760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161147e9190611f83565b60405180910390fd5b6114928383836117c2565b505050565b6002600554036114d3576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600581905550565b6001600581905550565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115595760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016115509190611f83565b60405180910390fd5b611565600083836117c2565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115db5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016115d29190611f83565b60405180910390fd5b6115e7826000836117c2565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361165d5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016116549190611f83565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036116cf5760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016116c69190611f83565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156117bc578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516117b39190611bb7565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611814578060026000828254611808919061211c565b925050819055506118e7565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156118a0578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161189793929190612296565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611930578060026000828254039250508190555061197d565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516119da9190611bb7565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611a21578082015181840152602081019050611a06565b60008484015250505050565b6000601f19601f8301169050919050565b6000611a49826119e7565b611a5381856119f2565b9350611a63818560208601611a03565b611a6c81611a2d565b840191505092915050565b60006020820190508181036000830152611a918184611a3e565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611ac982611a9e565b9050919050565b611ad981611abe565b8114611ae457600080fd5b50565b600081359050611af681611ad0565b92915050565b6000819050919050565b611b0f81611afc565b8114611b1a57600080fd5b50565b600081359050611b2c81611b06565b92915050565b60008060408385031215611b4957611b48611a99565b5b6000611b5785828601611ae7565b9250506020611b6885828601611b1d565b9150509250929050565b60008115159050919050565b611b8781611b72565b82525050565b6000602082019050611ba26000830184611b7e565b92915050565b611bb181611afc565b82525050565b6000602082019050611bcc6000830184611ba8565b92915050565b600080600060608486031215611beb57611bea611a99565b5b6000611bf986828701611ae7565b9350506020611c0a86828701611ae7565b9250506040611c1b86828701611b1d565b9150509250925092565b600060ff82169050919050565b611c3b81611c25565b82525050565b6000602082019050611c566000830184611c32565b92915050565b600060208284031215611c7257611c71611a99565b5b6000611c8084828501611b1d565b91505092915050565b600060208284031215611c9f57611c9e611a99565b5b6000611cad84828501611ae7565b91505092915050565b6000819050919050565b6000611cdb611cd6611cd184611a9e565b611cb6565b611a9e565b9050919050565b6000611ced82611cc0565b9050919050565b6000611cff82611ce2565b9050919050565b611d0f81611cf4565b82525050565b6000602082019050611d2a6000830184611d06565b92915050565b60008060408385031215611d4757611d46611a99565b5b6000611d5585828601611ae7565b9250506020611d6685828601611ae7565b9150509250929050565b6000611d7b82611ce2565b9050919050565b611d8b81611d70565b82525050565b6000602082019050611da66000830184611d82565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611df357607f821691505b602082108103611e0657611e05611dac565b5b50919050565b7f526570617920616d6f756e74206578636565647320626f72726f770000000000600082015250565b6000611e42601b836119f2565b9150611e4d82611e0c565b602082019050919050565b60006020820190508181036000830152611e7181611e35565b9050919050565b611e8181611abe565b82525050565b6000606082019050611e9c6000830186611e78565b611ea96020830185611e78565b611eb66040830184611ba8565b949350505050565b611ec781611b72565b8114611ed257600080fd5b50565b600081519050611ee481611ebe565b92915050565b600060208284031215611f0057611eff611a99565b5b6000611f0e84828501611ed5565b91505092915050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000611f4d600f836119f2565b9150611f5882611f17565b602082019050919050565b60006020820190508181036000830152611f7c81611f40565b9050919050565b6000602082019050611f986000830184611e78565b92915050565b600081519050611fad81611b06565b92915050565b600060208284031215611fc957611fc8611a99565b5b6000611fd784828501611f9e565b91505092915050565b6000606082019050611ff56000830186611ba8565b6120026020830185611ba8565b61200f6040830184611ba8565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061205182611afc565b915061205c83611afc565b925082820261206a81611afc565b9150828204841483151761208157612080612017565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006120c282611afc565b91506120cd83611afc565b9250826120dd576120dc612088565b5b828204905092915050565b60006120f382611afc565b91506120fe83611afc565b925082820390508181111561211657612115612017565b5b92915050565b600061212782611afc565b915061213283611afc565b925082820190508082111561214a57612149612017565b5b92915050565b60006080820190506121656000830187611ba8565b6121726020830186611ba8565b61217f6040830185611ba8565b61218c6060830184611ba8565b95945050505050565b7f496e73756666696369656e74206c697175696469747900000000000000000000600082015250565b60006121cb6016836119f2565b91506121d682612195565b602082019050919050565b600060208201905081810360008301526121fa816121be565b9050919050565b60006040820190506122166000830185611e78565b6122236020830184611ba8565b9392505050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b60006122606014836119f2565b915061226b8261222a565b602082019050919050565b6000602082019050818103600083015261228f81612253565b9050919050565b60006060820190506122ab6000830186611e78565b6122b86020830185611ba8565b6122c56040830184611ba8565b94935050505056fea264697066735822122018272be9a660592b05b3e587d3acd3047f8c1c6e914d0a6ed5179dfa263a44ec64736f6c63430008180033";

type ITokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ITokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IToken__factory extends ContractFactory {
  constructor(...args: ITokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _underlying: AddressLike,
    _interestRateModel: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _underlying,
      _interestRateModel,
      overrides || {}
    );
  }
  override deploy(
    _underlying: AddressLike,
    _interestRateModel: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _underlying,
      _interestRateModel,
      overrides || {}
    ) as Promise<
      IToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): IToken__factory {
    return super.connect(runner) as IToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ITokenInterface {
    return new Interface(_abi) as ITokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IToken {
    return new Contract(address, _abi, runner) as unknown as IToken;
  }
}
